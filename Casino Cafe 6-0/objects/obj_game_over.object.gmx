<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>empty_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///top 10 and high score saving


//
gravity = 0.25;
depth = -1500;

obj_stack.timer_can_click = 5;  

//
timer_to1 = 30;  
falling = true;

press_r_to_restart = true;
pressed_r = false;

//saving
var i;

//load high score
if file_exists("pick5.sav") {
  var loadfile = file_text_open_read("pick5.sav"); //stores the id of "pick5.sav" in "loadfile" if file exists
  for (i=0;i&lt;10;i++) {ds_list_add(obj_control.hs_list,file_text_read_real(loadfile));} //stores each individual score
  file_text_close(loadfile); //close
}



//add new score to high score list
ds_list_add(obj_control.hs_list,obj_control.score_round); //add last score
ds_list_sort(obj_control.hs_list,false);                  //sort descending

if file_exists("pick5.sav") {
  file_delete("pick5.sav"); //delete before write if file exists
}
  
var savefile = file_text_open_write("pick5.sav"); //store id of file to write to 
for (i=0;i&lt;10;i++) {
  file_text_write_real(savefile,ds_list_find_value(obj_control.hs_list,i)); //write to file
}
   
file_text_close(savefile); //close







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///


//
obj_stack.timer_can_click = 5; //disable clicking during action


//begin fall
if falling {

  if y &lt; 15 {
   
  } else {
     gravity = 0;
     speed = 0;
   
     press_r_to_restart = true; //can press when stop stopped
     falling = false; //stop
    }
    
    
}



if press_r_to_restart {
 
 if !pressed_r {
  if keyboard_check_pressed(ord("R")) {
   instance_create(0,0-room_height,obj_transition);
   pressed_r = true; //can only press once
  }
 }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///

draw_set_color(c_black);
draw_set_alpha(0.8);
draw_roundrect(x+40,y,room_width-40,y+320,false);
draw_set_color(c_white);
draw_set_alpha(1);
draw_roundrect(x+40,y,room_width-40,y+320,true);

draw_set_font(font2);
draw_set_halign(fa_center);

draw_text(x+350,y+10,"Game Over");

draw_set_font(-1)
draw_set_color(c_lime);
draw_text(x+560,y+5,"Press R to Restart");
draw_set_font(font2);



////draw top 10 scores
showorange = ds_list_find_index(obj_control.hs_list,obj_control.score_round);


  draw_set_color(c_red); 
  draw_text(room_width/2,y+45,"Top 10"); //"Top 10" - top of screen
  draw_text(room_width/2,y+49,"______"); //"Top 10" - top of screen
  draw_set_color(-1);
  
  for (i=0;i&lt;10;i++) { //
   draw_set_halign(fa_center); //set halign
   draw_text(room_width/2,y+80+i*23,string(i+1)+":_____________"); //draw lines
   
      draw_set_halign(fa_left); //set halign left to right
      
      if ds_list_find_value(obj_control.hs_list,i) &gt; 0 {
       if i == showorange { 
        draw_set_color(c_orange);
        draw_text(room_width/2-42,y+80+i*23,string(ds_list_find_value(obj_control.hs_list,i))); //draw scores with the hs_score position
        draw_set_color(c_white);
       } else draw_text(room_width/2-42,y+80+i*23,string(ds_list_find_value(obj_control.hs_list,i))); //draw scores with the hs_score position
      }
  }  

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
